// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package frc.robot.commands;

import edu.wpi.first.wpilibj2.command.CommandBase;
import frc.robot.io.Controls;
import frc.robot.subsystems.drive.Drive;

/**
 *
 */
public class TeleopCommand extends CommandBase {

    private Drive drive;
    private Controls controls;
    double distance;
    double maxSpeed;
    double constant;
    double DEADZONE = 0.11;
    boolean resetEncoders;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public TeleopCommand(Controls controls, Drive drive) {

        this.controls = controls;
        this.drive = drive;
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    @Override
    public void initialize() {
        System.out.println("Initialized");

    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    public void execute() {
        System.out.println("executing");

        if (controls.getRightX(DEADZONE) == 0.0) {
            if (resetEncoders = false) {
                drive.resetEncoders();
                resetEncoders = true;
            }
            drive.arcadeDrive(controls.getLeftY(DEADZONE), drive.straightTurnPower());
        } else {
            drive.arcadeDrive(controls.getLeftY(DEADZONE), controls.getRightX(DEADZONE) * 0.75);
            resetEncoders = false;
        }
    }



}
